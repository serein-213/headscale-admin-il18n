{
  "app": {
    "title": "Headscale-Admin",
    "github": "GitHub"
  },
  "navigation": {
    "home": "Home",
    "users": "Users",
    "nodes": "Nodes",
    "routes": "Routes",
    "acls": "ACLs",
    "settings": "Settings",
    "deploy": "Deploy"
  },
  "settings": {
    "title": "Settings",
    "apiUrl": "API URL",
    "apiKey": "API Key",
    "apiUrlPlaceholder": "Enter API URL",
    "apiKeyPlaceholder": "Enter your API Key",
    "apiTtl": "API Refresh Interval (seconds)",
    "theme": "Theme",
    "language": "Language",
    "debugging": "Console Debugging",
    "save": "Save Settings",
    "authorized": "Authorized",
    "notAuthorized": "Not Authorized",
    "expiresIn": "Expires in",
    "checkingAuth": "Checking authorization...",
    "savedSettings": "Saved Settings",
    "logUsers": "Log Users",
    "logNodes": "Log Nodes",
    "logPreAuthKeys": "Log PreAuthKeys",
    "logApiKeyInfo": "Log ApiKey Info",
    "showApiKey": "Show API Key",
    "hideApiKey": "Hide API Key",
    "refreshApiKey": "Refresh API Key"
  },
  "common": {
    "close": "Close",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "delete": "Delete",
    "edit": "Edit",
    "save": "Save",
    "create": "Create",
    "loading": "Loading...",
    "name": "Name",
    "email": "Email",
    "user": "User",
    "node": "Node",
    "route": "Route",
    "status": "Status",
    "actions": "Actions",
    "online": "Online",
    "offline": "Offline",
    "expired": "Expired",
    "active": "Active",
    "createdAt": "Created At",
    "lastSeen": "Last Seen",
    "hostname": "Hostname",
    "addresses": "Addresses",
    "tags": "Tags",
    "owner": "Owner",
    "routes": "Routes",
    "all": "All",
    "id": "ID",
    "sort": "Sort",
    "filter": "Filter",
    "name": "Name",
    "search": "Search...",
    "createUser": "Create User",
    "createNode": "Create Node",
    "newUsername": "New Username...",
    "deviceKey": "Device Key...",
    "usernameAndKeyRequired": "Username and Device Key are Required",
    "createdUser": "Created user",
    "createdNode": "Created node",
    "failedCreateUser": "Failed to create user",
    "failedCreateNode": "Failed to create node"
  },
  "users": {
    "title": "Users",
    "createUser": "Create User",
    "displayName": "Display Name",
    "provider": "Provider",
    "email": "Email",
    "nodes": "Nodes",
    "preAuthKeys": "Pre-Auth Keys"
  },
  "nodes": {
    "title": "Nodes",
    "createNode": "Create Node",
    "registrationMethod": "Registration Method",
    "expiresAt": "Expires At",
    "info": "Info"
  },
  "routes": {
    "title": "Routes",
    "enabled": "Enabled",
    "advertised": "Advertised",
    "destination": "Destination"
  },
  "acls": {
    "title": "ACLs",
    "config": "Config",
    "groups": "Groups",
    "hosts": "Hosts",
    "policies": "Policies",
    "sshRules": "SSH Rules",
    "tagOwners": "Tag Owners"
  },
  "deploy": {
    "title": "Deploy",
    "copyCommand": "Copied Command to Clipboard!",
    "general": "General:",
    "advertise": "Advertise:",
    "accept": "Accept:",
    "saveDefaults": "Save Defaults",
    "savedDefaults": "Saved Deployment Defaults",
    "shieldsUp": "Shields Up",
    "shieldsUpHelp": "Block incoming connections",
    "generateQR": "Generate QR Code",
    "generateQRHelp": "Create a scannable QR code to import into TailScale client",
    "reset": "Reset",
    "resetHelp": "Reset unspecified settings to default values",
    "operator": "Operator",
    "operatorHelp": "(Unix Only) Run as a different user",
    "forceReauth": "Force Reauthentication",
    "forceReauthHelp": "Force user to re-authenticate to Headscale server",
    "sshServer": "SSH Server",
    "sshServerHelp": "Run a local SSH server accessible by administrators",
    "preAuthKey": "PreAuth Key",
    "preAuthKeyHelp": "A generated key to automatically authenticate the node for a given user",
    "unattended": "Unattended",
    "unattendedHelp": "Run the tailscale client in unattended mode (on startup)",
    "allowLANAccess": "Allow LAN Access",
    "allowLANAccessHelp": "Allow local network access while connected to the TailNet and using an exit node",
    "advertiseExitNode": "Advertise Exit Node",
    "advertiseExitNodeHelp": "Allow other nodes on the TailNet to use this node as a gateway",
    "advertiseTags": "Advertise Tags",
    "advertiseTagsHelp": "List of advertised tags to apply to a machine on provisioning",
    "advertiseRoutes": "Advertise Routes",
    "advertiseRoutesHelp": "List of subnets which are reachable via this node",
    "acceptDNS": "Accept DNS",
    "acceptDNSHelp": "Accept the HeadScale-provided DNS settings",
    "acceptRoutes": "Accept Routes",
    "acceptRoutesHelp": "Accept other nodes' advertised subnets",
    "exitNode": "Exit Node",
    "exitNodeHelp": "Use this node as a gateway (target node must advertise exit node)",
    "validKeys": "Valid Key(s)",
    "tagError": "Tag should be a lowercase alphanumeric word",
    "cidrError": "Invalid CIDR Format"
  },
  "home": {
    "title": "Home",
    "totalUsers": "Total Users",
    "onlineUsers": "Online Users",
    "validPreAuthKeys": "Valid PreAuth Keys",
    "totalNodes": "Total Nodes",
    "onlineNodes": "Online Nodes",
    "totalRoutes": "Total Routes"
  }
}
